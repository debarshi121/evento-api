// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  BASIC
  PREMIUM
}

enum Role {
  USER
  MANAGER
  ADMIN
}

enum Status {
  PAYMENT_PENDING
  UNDER_REVIEW
  LIVE
}

model Event {
  id             Int             @id @default(autoincrement())
  title          String          @db.VarChar(255)
  description    String
  bannerUrl      String
  videoUrl       String?
  venue          String
  startDate      DateTime
  endDate        DateTime?
  entryFee       Int
  latitude       Float
  longitude      Float
  organizerName  String
  organizerEmail String
  organizerPhone String
  plan           Plan?
  published      Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  categories     EventCategory[]
  userId         Int
  user           User            @relation(fields: [userId], references: [id])
  status         Status
}

model Category {
  id        Int             @id @default(autoincrement())
  title     String          @unique
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  events    EventCategory[]
}

model EventCategory {
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  assignedAt DateTime @default(now())

  @@id([eventId, categoryId])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Event     Event[]
}
